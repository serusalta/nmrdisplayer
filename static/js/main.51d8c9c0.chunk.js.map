{"version":3,"sources":["demo/utility/menu.js","demo/assets/img/logo-white.svg","demo/components/Sidebar/Sidebar.jsx","demo/layouts/Admin.jsx","demo/layouts/SingleDisplayerLayout.jsx","demo/layouts/Main.jsx","demo/serviceWorker.js","demo/test/TestRoutes.jsx","index.js","demo/views lazy /^/.//.*$/ groupOptions: {} namespace object"],"names":["getMenu","array","nodes","key","parentIndex","_nodes","children","index","React","cloneElement","Array","isArray","node","createElement","SubMenu","title","groupName","push","MenuItem","mapTreeToFlatArray","routes","item","concat","getFlatArray","inputArray","_children","getKey","filePath","match","RegExp","exec","parentFolderName","parentPath","split","length","replace","ps","localRoutes","Sidebar","props","state","sidebar","createRef","activeRoute","bind","menuHandler","isMenuOpen","routeName","this","location","pathname","indexOf","navigator","platform","PerfectScrollbar","refs","suppressScrollX","suppressScrollY","menu","Math","random","toString","buildMenu","setState","prev","destroy","e","current","className","onMenuClose","ref","data-color","backgroundColor","type","onClick","src","logo","alt","history","file","mode","PureComponent","Dashboard","routesList","menuCloseHandler","flag","setTimeout","mainPanel","prevState","document","body","classList","toggle","action","scrollTop","scrollingElement","fallback","map","prop","path","render","id","params","viewName","view","RenderedView","lazy","baseURL","routeProp","Component","SingleDisplayerLayout","patrh","styles","bodyContainer","display","justifyContent","alignItems","height","width","container","borderRadius","fontSize","textAlign","normal","color","error","errorHeader","normalHeader","loadButton","padding","border","fontWeight","cursor","url","a","fetch","response","checkStatus","json","data","console","log","ok","Error","status","statusText","Main","useState","isLoaded","setRoutes","dashBoardType","setDashBoardType","loadHandler","useCallback","useEffect","values","queryString","parse","search","sampleURL","substring","lastIndexOf","getFileExtension","toLowerCase","loadData","then","remoteRoutes","_remoteRoutes","JSON","stringify","Admin","style","Boolean","window","hostname","TestHighlight","ReactDOM","component","getElementById","serviceWorker","ready","registration","unregister","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","code","ids","all","slice","keys","Object","module","exports"],"mappings":"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","file":"static/js/main.51d8c9c0.chunk.js","sourcesContent":["import { SubMenu, MenuItem } from 'rc-menu';\nimport React from 'react';\n\nfunction buildMenu(array = []) {\n  let menu = [];\n  for (const item of array) {\n    const key = Math.random().toString(36).replace('0.', '');\n\n    if (item.children && Array.isArray(item.children)) {\n      menu.push(getMenu([item], [], key));\n    } else {\n      menu.push(\n        React.createElement(MenuItem, { key: item.title, ...item }, item.title),\n      );\n    }\n  }\n  return menu;\n}\n\nfunction getMenu(array = [], nodes = [], key, parentIndex = 0) {\n  let _nodes = nodes;\n  let children = [];\n\n  if (parentIndex !== -1 && _nodes[parentIndex]) {\n    _nodes[parentIndex] = React.cloneElement(_nodes[parentIndex], {}, children);\n  }\n\n  for (const index in array) {\n    if (array[index].children && Array.isArray(array[index].children)) {\n      const node = React.createElement(SubMenu, {\n        key: index + key,\n        title: array[index].groupName,\n      });\n      _nodes.push(node);\n      return getMenu(array[index].children, _nodes, key, 0);\n    } else {\n      children.push(\n        React.createElement(\n          MenuItem,\n          { key: index + key, ...array[index] },\n          array[index].title,\n        ),\n      );\n    }\n  }\n  return _nodes;\n}\n\nfunction mapTreeToFlatArray(array = []) {\n  let routes = [];\n  for (const item of array) {\n    if (item.children && Array.isArray(item.children)) {\n      routes = routes.concat(getFlatArray([item], []));\n    } else {\n      routes.push(item);\n    }\n  }\n  return routes;\n}\n\nfunction getFlatArray(inputArray = [], children = []) {\n  let _children = children;\n\n  for (const item of inputArray) {\n    if (item.children && Array.isArray(item.children)) {\n      return getFlatArray(item.children, _children);\n    } else {\n      children.push(item);\n    }\n  }\n  return _children;\n}\n\nfunction getKey(filePath = '') {\n  const match = new RegExp(/^(?<path>.*)\\/(?<file>[^/]*)$/g).exec(filePath);\n  let parentFolderName = '';\n  if (match) {\n    const parentPath = match[1].split('/');\n    parentFolderName =\n      parentPath.length > 2\n        ? parentPath[parentPath.length - 2] + parentPath[parentPath.length - 1]\n        : parentPath[parentPath.length - 1];\n  }\n  return parentFolderName + filePath.replace(/\\.|\\s|\\//g, '');\n}\n\nexport { buildMenu, getKey, mapTreeToFlatArray };\n","export default __webpack_public_path__ + \"static/media/logo-white.6a2b2982.svg\";","/*!\n\n=========================================================\n* Now UI Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Nav } from 'reactstrap';\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport { buildMenu, getKey } from '../../utility/menu';\nimport Menu from 'rc-menu';\nimport logo from '../../assets/img/logo-white.svg';\nimport 'rc-menu/assets/index.css';\nimport { FaBars } from 'react-icons/fa';\n\nvar ps;\n\nclass Sidebar extends React.PureComponent {\n  state = { routes: [] };\n  constructor(props) {\n    super(props);\n    this.sidebar = React.createRef();\n    this.activeRoute.bind(this);\n    this.menuHandler = this.menuHandler.bind(this);\n    this.isMenuOpen = true;\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? 'active' : '';\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf('Win') > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n    const routes = buildMenu(this.props.routes, []);\n    this.setState((prev) => {\n      return { ...prev, routes };\n    });\n    // this.sidebar.current.class = 'sidebar menu-open';\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf('Win') > -1) {\n      ps.destroy();\n    }\n  }\n\n  menuHandler(e) {\n    this.isMenuOpen = !this.isMenuOpen;\n    this.sidebar.current.className = this.isMenuOpen\n      ? 'sidebar menu-open'\n      : 'sidebar menu-close';\n\n    this.props.onMenuClose(!this.isMenuOpen);\n  }\n\n  render() {\n    return (\n      <div\n        ref={this.sidebar}\n        data-color={this.props.backgroundColor}\n        className=\"sidebar menu-open\"\n      >\n        <button type=\"button\" className=\"menu-bt\" onClick={this.menuHandler}>\n          <FaBars />\n        </button>\n        <div className=\"logo\">\n          <a\n            // href=\"https://www.creative-tim.com?ref=nudr-sidebar\"\n            className=\"simple-text logo-mini\"\n            // target=\"_blank\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"react-logo\" />\n            </div>\n          </a>\n          <a\n            // href=\"https://www.creative-tim.com?ref=nudr-sidebar\"\n            className=\"simple-text logo-normal\"\n            // target=\"_blank\"\n          >\n            NMRium\n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          <Menu\n            onClick={(e) => {\n              this.props.history.push(\n                `/SamplesDashboard/${Math.random()\n                  .toString(36)\n                  .replace('0.', '')}/${getKey(e.item.props.file)}`,\n              );\n            }}\n            mode=\"inline\"\n          >\n            {this.state.routes}\n          </Menu>\n\n          {/* <Nav>\n            {this.props.routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.layout + prop.path) +\n                    (prop.pro ? ' active active-pro' : '')\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    style={{ borderRadius: '10px' }}\n                  >\n                    <i className={'now-ui-icons ' + prop.icon} />\n                    <p style={{ whiteSpace: 'pre-line', paddingLeft: '60px' }}>\n                      {prop.name}\n                    </p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","/*!\n\n=========================================================\n* Now UI Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport React, { Suspense } from 'react';\n// javascript plugin used to create scrollbars on windows\n// reactstrap components\nimport { Route, Switch } from 'react-router-dom';\n\n// core components\nimport Sidebar from '../components/Sidebar/Sidebar';\n// import View from '../views/View';\nimport { mapTreeToFlatArray, getKey } from '../utility/menu';\n\nlet ps;\nlet localRoutes;\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.menuCloseHandler = this.menuCloseHandler.bind(this);\n    this.mainPanel = React.createRef();\n  }\n\n  state = {\n    backgroundColor: 'blue',\n    routesList: [],\n    routes: [],\n    // isMenuClosed: false,\n  };\n\n  // eslint-disable-next-line react/no-deprecated\n  componentWillMount() {\n    localRoutes = this.props.routes ? this.props.routes : localRoutes;\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        routesList: mapTreeToFlatArray(localRoutes),\n        routes: localRoutes,\n      };\n    });\n  }\n\n  componentDidMount() {\n    if (navigator.platform.indexOf('Win') > -1) {\n      ps = new PerfectScrollbar(this.mainPanel.current);\n      document.body.classList.toggle('perfect-scrollbar-on');\n    }\n  }\n\n  componentDidUpdate(e) {\n    if (e.history.action === 'PUSH') {\n      this.mainPanel.current.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n\n  componentWillUnmount() {\n    if (navigator.platform.indexOf('Win') > -1) {\n      ps.destroy();\n      document.body.classList.toggle('perfect-scrollbar-on');\n    }\n  }\n\n  // handleColorClick = (color) => {\n  //   this.setState({ backgroundColor: color });\n  // };\n\n  menuCloseHandler = (flag) => {\n    setTimeout(() => {\n      this.mainPanel.current.className = flag\n        ? 'main-panel main-panel-when-menu-closed'\n        : 'main-panel';\n    }, 200);\n\n    // this.setState((prev) => {\n    //   return { ...prev, isMenuClosed: flag };\n    // });\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={this.state.routes}\n          backgroundColor={this.state.backgroundColor}\n          onMenuClose={this.menuCloseHandler}\n        />\n        <div className=\"main-panel\" ref={this.mainPanel}>\n          {/* <Router {...this.props}> */}\n          <Suspense fallback={<div>Cargando...</div>}>\n            <Switch>\n              {this.state.routesList.map((prop) => (\n                <Route\n                  path={`/SamplesDashboard/:id/${getKey(prop.file)}`}\n                  // component={prop.component}\n                  render={(props) => {\n                    const {\n                      match: {\n                        params: { id },\n                      },\n                    } = props;\n                    const viewName = prop.view ? prop.view : 'View';\n                    const RenderedView = React.lazy(() =>\n                      import(`../views/${viewName}`),\n                    );\n\n                    return (\n                      <RenderedView\n                        key={id}\n                        {...prop}\n                        id={getKey(prop.file)}\n                        baseURL={this.props.baseURL}\n                      />\n                    );\n                  }}\n                  key={getKey(prop.file)}\n                />\n              ))}\n\n              {this.state.routesList.length > 0 && (\n                <Route\n                  path=\"/\"\n                  // component={prop.component}\n\n                  render={() => {\n                    const routeProp = this.state.routesList[0];\n                    const viewName = routeProp.view ? routeProp.view : 'View';\n                    const RenderedView = React.lazy(() =>\n                      import(`../views/${viewName}`),\n                    );\n\n                    return <RenderedView {...routeProp[0]} />;\n                  }}\n                  key={getKey(this.state.routesList[0].file)}\n                />\n              )}\n            </Switch>\n          </Suspense>\n          {/* </Router> */}\n          {/* <DemoNavbar {...this.props} /> */}\n          {/* <Switch>\n            {routes.map((prop, key) => {\n              return (\n                <Route\n                  path={prop.layout + prop.path}\n                  // component={prop.component}\n                  render={(props) =>\n                    React.cloneElement(prop.component, { ...props, ...prop })\n                  }\n                  key={key}\n                />\n              );\n            })}\n            <Redirect from=\"/admin\" to={`/admin${routes[0].path}`} />\n          </Switch> */}\n\n          {/* <Footer fluid /> */}\n        </div>\n        {/* <FixedPlugin\n          bgColor={this.state.backgroundColor}\n          handleColorClick={this.handleColorClick}\n        /> */}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { getKey } from '../utility/menu';\n\nclass SingleDisplayerLayout extends React.Component {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(props) {\n    super(props);\n  }\n\n  // eslint-disable-next-line no-empty-function\n  componentDidMount() {}\n\n  // eslint-disable-next-line no-empty-function\n  componentWillUnmount() {}\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main-panel main-panel-when-menu-closed\">\n          <Suspense fallback={<div>Loading...</div>}>\n            <Switch>\n              <Route\n                path=\"/\"\n                render={(props) => {\n                  const {\n                    match: {\n                      params: { id },\n                    },\n                  } = props;\n                  const viewName = this.props.view\n                    ? this.props.view\n                    : 'SingleView';\n                  const RenderedView = React.lazy(() =>\n                    import(`../views/${viewName}`),\n                  );\n\n                  return (\n                    <RenderedView\n                      key={id}\n                      {...this.props}\n                      id={getKey(this.props.patrh)}\n                    />\n                  );\n                }}\n                key={getKey(this.props.path)}\n              />\n            </Switch>\n          </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SingleDisplayerLayout;\n","import queryString from 'query-string';\nimport React, { useEffect, useState, useCallback } from 'react';\n\nimport routes from '../samples';\n\nimport AdminLayout from './Admin.jsx';\nimport SingleDisplayerLayout from './SingleDisplayerLayout.jsx';\n\nconst styles = {\n  bodyContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    width: '100vw',\n    backgroundColor: '#e3e3e3',\n  },\n\n  container: {\n    width: '30%',\n    height: '40%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '10px',\n    fontSize: '20px',\n    textAlign: 'center',\n  },\n  normal: {\n    backgroundColor: 'white',\n    color: 'black',\n  },\n  error: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  errorHeader: {\n    fontSize: '100px',\n  },\n  normalHeader: {\n    fontSize: '24px',\n  },\n  loadButton: {\n    fontSize: '12px',\n    padding: '12px 40px',\n    borderRadius: '10px',\n    border: '1px solid #c70000',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n  },\n};\nasync function loadData(url) {\n  const response = await fetch(url);\n  try {\n    checkStatus(response);\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n    return null;\n  }\n}\n\nfunction checkStatus(response) {\n  if (!response.ok) {\n    throw new Error(`HTTP ${response.status} - ${response.statusText}`);\n  }\n  return response;\n}\n\nconst Main = (props) => {\n  const [data, setRoutes] = useState({\n    isLoaded: false,\n    status: 200,\n    routes: [],\n  });\n  const [dashBoardType, setDashBoardType] = useState('');\n\n  const loadHandler = useCallback(() => {\n    setRoutes({ isLoaded: true, status: 200, routes: routes });\n  }, []);\n\n  const getFileExtension = (url = '') => {\n    return url.substring(url.lastIndexOf('.') + 1);\n  };\n\n  useEffect(() => {\n    const values = queryString.parse(props.location.search);\n    if (values && values.sampleURL) {\n      const extention = getFileExtension(values.sampleURL).toLowerCase();\n      switch (extention) {\n        case 'json': {\n          setDashBoardType('multi');\n          loadData(values.sampleURL).then((remoteRoutes) => {\n            if (remoteRoutes) {\n              const baseURL = values.sampleURL.replace(\n                // eslint-disable-next-line no-useless-escape\n                /^(?<url>.*[\\\\\\/])?(?<filename>.*?\\.[^.]*?|)$/g,\n                '$1',\n              );\n\n              const _remoteRoutes = JSON.parse(\n                JSON.stringify(remoteRoutes).replace(/\\.\\/+?/g, baseURL),\n              );\n              setRoutes({\n                isLoaded: true,\n                status: 200,\n                routes: _remoteRoutes,\n                baseURL,\n              });\n            } else {\n              setRoutes({ isLoaded: false, status: 404, routes: [] });\n            }\n          });\n          break;\n        }\n        case 'dx':\n        case 'jdx': {\n          setDashBoardType('single');\n          setRoutes({\n            isLoaded: true,\n            status: 200,\n            path: values.sampleURL,\n          });\n\n          break;\n        }\n\n        default:\n          break;\n      }\n\n      //   console.log(remoteRoutes);\n    } else {\n      setDashBoardType('multi');\n      setRoutes({ isLoaded: true, status: 200, routes: routes, baseURL: './' });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return !data.isLoaded ? (\n    <div style={styles.bodyContainer}>\n      <div\n        style={{\n          ...styles.container,\n          ...(data.status === 200 ? styles.normal : styles.error),\n        }}\n      >\n        {data.status === 200 ? (\n          <div>\n            <p style={styles.normalHeader}>Por favor espere</p>\n            <p>Será redirigido en unos segundos</p>\n          </div>\n        ) : (\n          <div>\n            <p style={styles.errorHeader}>404</p>\n            <p>Recurso no encontrado.</p>\n            <button\n              style={styles.loadButton}\n              type=\"button\"\n              onClick={loadHandler}\n            >\n              Cargar archivos locales\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  ) : dashBoardType && dashBoardType === 'single' ? (\n    <SingleDisplayerLayout {...props} path={data.path} />\n  ) : (\n    <AdminLayout {...props} routes={data.routes} baseURL={data.baseURL} />\n  );\n};\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { lazy, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nconst TestHighlight = lazy(() => import('./TestHighlight'));\n\nexport default function TestRoutes() {\n  return (\n    <Suspense fallback={null}>\n      <Switch>\n        <Route path=\"/test/highlight\" component={TestHighlight} />\n        <Route render={() => <div>Page not found</div>} />\n      </Switch>\n    </Suspense>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Main from './demo/layouts/Main';\nimport * as serviceWorker from './demo/serviceWorker';\nimport TestRoutes from './demo/test/TestRoutes.jsx';\n\nimport 'cheminfo-font/dist/style.css';\nimport 'react-animated-slider-2/build/horizontal.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './demo/index.css';\nimport './demo/assets/css/now-ui-dashboard.min.css';\nimport './demo/assets/css/demo.css';\n\nReactDOM.render(\n  <HashRouter>\n    <Switch>\n      <Route path=\"/\" render={(props) => <Main {...props} />} />\n      <Route path=\"/test\" component={TestRoutes} />\n    </Switch>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./Exercise\": [\n\t\t109,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3\n\t],\n\t\"./Exercise.jsx\": [\n\t\t109,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3\n\t],\n\t\"./SingleView\": [\n\t\t110,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t4\n\t],\n\t\"./SingleView.jsx\": [\n\t\t110,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t4\n\t],\n\t\"./Test\": [\n\t\t111,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t5\n\t],\n\t\"./Test.jsx\": [\n\t\t111,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t5\n\t],\n\t\"./View\": [\n\t\t112,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t6\n\t],\n\t\"./View.jsx\": [\n\t\t112,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t6\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 72;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}